import pytest

from peeler.wheels.download import (
    HasValidImplementation,
    _parse_implementation_and_python_version,
)


@pytest.mark.parametrize(
    ["python_tag", "expected_implementation", "expected_python_version"],
    [
        ("py2", "py", "2"),
        ("py3", "py", "3"),
        ("py25", "py", "25"),
        ("py26", "py", "26"),
        ("py27", "py", "27"),
        ("py31", "py", "31"),
        ("py32", "py", "32"),
        ("py33", "py", "33"),
        ("py34", "py", "34"),
        ("py35", "py", "35"),
        ("py36", "py", "36"),
        ("py37", "py", "37"),
        ("py38", "py", "38"),
        ("py39", "py", "39"),
        ("py310", "py", "310"),
        ("py311", "py", "311"),
        ("py312", "py", "312"),
        ("py313", "py", "313"),
        ("py314", "py", "314"),
        ("cp2", "cp", "2"),
        ("cp3", "cp", "3"),
        ("cp25", "cp", "25"),
        ("cp26", "cp", "26"),
        ("cp27", "cp", "27"),
        ("cp31", "cp", "31"),
        ("cp32", "cp", "32"),
        ("cp33", "cp", "33"),
        ("cp34", "cp", "34"),
        ("cp35", "cp", "35"),
        ("cp36", "cp", "36"),
        ("cp37", "cp", "37"),
        ("cp38", "cp", "38"),
        ("cp39", "cp", "39"),
        ("cp310", "cp", "310"),
        ("cp311", "cp", "311"),
        ("cp312", "cp", "312"),
        ("cp313", "cp", "313"),
        ("cp314", "cp", "314"),
        ("ip2", "ip", "2"),
        ("ip3", "ip", "3"),
        ("ip25", "ip", "25"),
        ("ip26", "ip", "26"),
        ("ip27", "ip", "27"),
        ("ip31", "ip", "31"),
        ("ip32", "ip", "32"),
        ("ip33", "ip", "33"),
        ("ip34", "ip", "34"),
        ("ip35", "ip", "35"),
        ("ip36", "ip", "36"),
        ("ip37", "ip", "37"),
        ("ip38", "ip", "38"),
        ("ip39", "ip", "39"),
        ("ip310", "ip", "310"),
        ("ip311", "ip", "311"),
        ("ip312", "ip", "312"),
        ("ip313", "ip", "313"),
        ("ip314", "ip", "314"),
        ("pp2", "pp", "2"),
        ("pp3", "pp", "3"),
        ("pp25", "pp", "25"),
        ("pp26", "pp", "26"),
        ("pp27", "pp", "27"),
        ("pp31", "pp", "31"),
        ("pp32", "pp", "32"),
        ("pp33", "pp", "33"),
        ("pp34", "pp", "34"),
        ("pp35", "pp", "35"),
        ("pp36", "pp", "36"),
        ("pp37", "pp", "37"),
        ("pp38", "pp", "38"),
        ("pp39", "pp", "39"),
        ("pp310", "pp", "310"),
        ("pp311", "pp", "311"),
        ("pp312", "pp", "312"),
        ("pp313", "pp", "313"),
        ("pp314", "pp", "314"),
        ("jy2", "jy", "2"),
        ("jy3", "jy", "3"),
        ("jy25", "jy", "25"),
        ("jy26", "jy", "26"),
        ("jy27", "jy", "27"),
        ("jy31", "jy", "31"),
        ("jy32", "jy", "32"),
        ("jy33", "jy", "33"),
        ("jy34", "jy", "34"),
        ("jy35", "jy", "35"),
        ("jy36", "jy", "36"),
        ("jy37", "jy", "37"),
        ("jy38", "jy", "38"),
        ("jy39", "jy", "39"),
        ("jy310", "jy", "310"),
        ("jy311", "jy", "311"),
        ("jy312", "jy", "312"),
        ("jy313", "jy", "313"),
        ("jy314", "jy", "314"),
    ],
)
def test__parse_implementation_and_python_version(
    python_tag: str, expected_implementation: str, expected_python_version: str
) -> None:
    assert (
        expected_implementation,
        expected_python_version,
    ) == _parse_implementation_and_python_version(python_tag)


@pytest.mark.parametrize(
    "url",
    [
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0a1-cp310-abi3-macosx_11_0_arm64.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0-py3-abi3-any.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0-py3-abi3-win_amd64.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0a1-py3-abi3-manylinux1_x86_64.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0a1-py3-abi3-macosx_11_0_arm64.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0a1-py3-none-macosx_11_0_arm64.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0a1-py2.py3-abi3-any.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0+cpu-py2.py3-abi3-win_amd64.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0+cpu-py2.py3-abi3-manylinux1_x86_64.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0+cpu-py2.py3-abi3-macosx_11_0_arm64.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0a1+cpu-py2.py3-none-any.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0a1+cpu-py2.py3-none-win_amd64.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0+cpu-py2.py3.jy3.ip311-none-manylinux1_x86_64.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0a1-py2.py3.ip3-none-macosx_11_0_arm64.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0a1-cp36.cp37.jy38-abi3-any.whl",
    ],
)
def test__has_valid_implementation(url: str) -> None:
    assert HasValidImplementation()([url])


@pytest.mark.parametrize(
    "url",
    [
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0a1-ip310-abi3-macosx_11_0_arm64.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0-ip3-abi3-any.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0-ip3-abi3-win_amd64.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0a1-ip3-abi3-manylinux1_x86_64.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0a1-jy3-abi3-macosx_11_0_arm64.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0a1-jy3-none-macosx_11_0_arm64.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0a1-jy2.jy3-abi3-any.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0+cpu-ip2.ip3-abi3-win_amd64.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0+cpu-ip2.ip3-abi3-manylinux1_x86_64.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0+cpu-ip2.ip3-abi3-macosx_11_0_arm64.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0a1+cpu-jy2.jy3-none-any.whl",
        r"https://files.pythonhosted.org/packages/.../packagename-1.0.0a1+cpu-jy2.jy3-none-win_amd64.whl",
    ],
)
def test__has_valid_implementation_invalid(url: str) -> None:
    assert not HasValidImplementation()([url])
